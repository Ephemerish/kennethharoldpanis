---
import Layout from "../layouts/MainLayout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import FeaturedProject from "../components/FeaturedProject.astro";
import ProjectFilter from "../components/ProjectFilter.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

// Get all projects and sort by status and date
const allProjects: CollectionEntry<"projects">[] = (
  await getCollection("projects")
).sort((a, b) => {
  // Featured projects first
  if (a.data.featured && !b.data.featured) return -1;
  if (!a.data.featured && b.data.featured) return 1;
  
  // Then by status priority (completed, in-progress, planned)
  const statusPriority = { completed: 0, "in-progress": 1, planned: 2 };
  const statusDiff = statusPriority[a.data.status] - statusPriority[b.data.status];
  if (statusDiff !== 0) return statusDiff;
  
  // Finally by start date (newest first)
  return b.data.startDate.valueOf() - a.data.startDate.valueOf();
});

// Get filter parameter from URL
const url = new URL(Astro.request.url);
const tagFilter = url.searchParams.get("tag");
const categoryFilter = url.searchParams.get("category");

// Filter projects by tag and/or category if specified
const filteredProjects = allProjects.filter(project => {
  const matchesTag = !tagFilter || project.data.tags.some(tag => 
    tag.toLowerCase() === tagFilter.toLowerCase()
  );
  const matchesCategory = !categoryFilter || project.data.category === categoryFilter;
  return matchesTag && matchesCategory;
});

// Get featured projects
const featuredProjects = filteredProjects.filter(project => project.data.featured);
const regularProjects = filteredProjects.filter(project => !project.data.featured);

// Get all unique tags and categories for filters
const allTags = [...new Set(allProjects.flatMap(project => project.data.tags))].sort();
const allCategories = [...new Set(allProjects.map(project => project.data.category))].sort();

// Page title based on filter
let pageTitle = "Projects";
if (tagFilter && categoryFilter) {
  pageTitle = `Projects - ${categoryFilter} - ${tagFilter}`;
} else if (tagFilter) {
  pageTitle = `Projects - ${tagFilter}`;
} else if (categoryFilter) {
  pageTitle = `Projects - ${categoryFilter}`;
}
---

<Layout title={pageTitle}>
  <div class="max-w-6xl mx-auto px-4 py-12">
    <!-- Header Section -->
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        My Projects
      </h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        A collection of my work spanning web development, machine learning, and software engineering. 
        Each project represents a journey of learning, problem-solving, and creative expression.
      </p>
    </div>

    <!-- Project Filter -->
    <div class="mb-8">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Category Filter -->
        <div>
          <h3 class="text-lg font-semibold mb-4 text-gray-700">Filter by Category</h3>
          <div class="flex flex-wrap gap-2">
            <a 
              href="/projects"
              class={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
                !categoryFilter 
                  ? 'bg-purple-600 text-white' 
                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
              }`}
            >
              All Categories
            </a>
            {allCategories.map((category) => (
              <a 
                href={`/projects?category=${encodeURIComponent(category)}`}
                class={`px-3 py-1 rounded-full text-sm font-medium transition-colors capitalize ${
                  categoryFilter === category 
                    ? 'bg-purple-600 text-white' 
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                {category.replace('-', ' ')}
              </a>
            ))}
          </div>
        </div>
        
        <!-- Tag Filter -->
        <div>
          <h3 class="text-lg font-semibold mb-4 text-gray-700">Filter by Technology</h3>
          <div class="flex flex-wrap gap-2">
            <a 
              href={categoryFilter ? `/projects?category=${categoryFilter}` : "/projects"}
              class={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
                !tagFilter 
                  ? 'bg-blue-600 text-white' 
                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
              }`}
            >
              All Technologies
            </a>
            {allTags.slice(0, 8).map((tag) => (
              <a 
                href={`/projects?${categoryFilter ? `category=${categoryFilter}&` : ''}tag=${encodeURIComponent(tag)}`}
                class={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
                  tagFilter === tag 
                    ? 'bg-blue-600 text-white' 
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                {tag}
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>

    <!-- Results Count -->
    <div class="mb-8">
      <p class="text-gray-600">
        {(() => {
          let message = `Showing ${filteredProjects.length} project${filteredProjects.length !== 1 ? 's' : ''}`;
          if (categoryFilter && tagFilter) {
            message += ` in "${categoryFilter.replace('-', ' ')}" category tagged with "${tagFilter}"`;
          } else if (categoryFilter) {
            message += ` in "${categoryFilter.replace('-', ' ')}" category`;
          } else if (tagFilter) {
            message += ` tagged with "${tagFilter}"`;
          } else {
            message = `Showing all ${filteredProjects.length} project${filteredProjects.length !== 1 ? 's' : ''}`;
          }
          return message;
        })()}
      </p>
    </div>

    <!-- Featured Projects -->
    {featuredProjects.length > 0 && (
      <div class="mb-16">
        <h2 class="text-2xl font-bold text-gray-900 mb-8">Featured Projects</h2>
        {featuredProjects.map((project) => (
          <FeaturedProject project={project} />
        ))}
      </div>
    )}

    <!-- Regular Projects Grid -->
    {regularProjects.length > 0 && (
      <div class="mb-16">
        <h2 class="text-2xl font-bold text-gray-900 mb-8">
          {featuredProjects.length > 0 ? "Other Projects" : "All Projects"}
        </h2>
        <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
          {regularProjects.map((project) => (
            <ProjectCard project={project} />
          ))}
        </div>
      </div>
    )}

    <!-- Empty State -->
    {filteredProjects.length === 0 && (
      <div class="text-center py-16">
        <div class="text-gray-400 mb-4">
          <svg class="w-24 h-24 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-600 mb-2">No projects found</h3>
        <p class="text-gray-500">
          {(() => {
            if (categoryFilter && tagFilter) {
              return `No projects found in "${categoryFilter.replace('-', ' ')}" category with the tag "${tagFilter}". Try adjusting your filters.`;
            } else if (categoryFilter) {
              return `No projects found in "${categoryFilter.replace('-', ' ')}" category. Try removing the filter to see all projects.`;
            } else if (tagFilter) {
              return `No projects found with the tag "${tagFilter}". Try removing the filter to see all projects.`;
            } else {
              return "No projects available at the moment.";
            }
          })()}
        </p>
        {(tagFilter || categoryFilter) && (
          <a 
            href="/projects" 
            class="inline-block mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            View All Projects
          </a>
        )}
      </div>
    )}

    <!-- Call to Action -->
    <div class="text-center mt-16 p-8 bg-gray-50 rounded-lg">
      <h3 class="text-2xl font-bold text-gray-900 mb-4">Interested in collaborating?</h3>
      <p class="text-gray-600 mb-6">
        I'm always open to discussing new opportunities and interesting projects.
      </p>
      <a 
        href="/contact" 
        class="inline-block px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
      >
        Get In Touch
      </a>
    </div>
  </div>
</Layout>
