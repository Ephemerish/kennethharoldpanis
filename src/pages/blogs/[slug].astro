---
import MainLayout from "../../layouts/MainLayout.astro";
import { getEntryBySlug, getCollection } from "astro:content";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { slug } = Astro.params;
const { entry } = Astro.props;
let Content, frontmatter;
if (entry) {
  const rendered = await entry.render();
  Content = rendered.Content;
  frontmatter = entry.data;
}
---

<MainLayout title={frontmatter?.title || "Blog Article"}>
  {entry ? (
    <div class="max-w-4xl mx-auto px-4 py-8">
      {/* Hero Section */}
      <header class="mb-8">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4 leading-tight">
          {frontmatter?.title}
        </h1>
        <div class="flex items-center justify-between flex-wrap gap-4 mb-6">
          <div class="flex items-center gap-4 text-gray-600">
            <span class="text-sm">By {frontmatter?.author}</span>
            <span class="text-sm">•</span>
            <time class="text-sm">{frontmatter?.pubDate?.toLocaleDateString()}</time>
          </div>
          {frontmatter?.tags && (
            <div class="flex flex-wrap gap-2">
              {frontmatter.tags.map((tag) => (
                <span class="px-3 py-1 bg-blue-100 text-blue-800 text-xs font-medium rounded-full">
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </div>
        {frontmatter?.image && (
          <div class="mb-8">
            <img 
              src={"/images/" + frontmatter.image} 
              alt={frontmatter?.title || "Blog post image"} 
              class="w-full h-64 md:h-96 object-cover rounded-lg shadow-lg"
            />
          </div>
        )}
      </header>

      {/* Article Content */}
      <article class="
        text-gray-700 text-lg leading-8 font-light
        [&>h1]:text-2xl [&>h1]:font-medium [&>h1]:text-gray-900 [&>h1]:mt-8 [&>h1]:mb-4 [&>h1]:tracking-tight [&>h1]:pb-2 [&>h1]:border-b [&>h1]:border-gray-100
        [&>h2]:text-xl [&>h2]:font-semibold [&>h2]:text-white [&>h2]:mt-6 [&>h2]:mb-3 [&>h2]:tracking-tight [&>h2]:bg-gradient-to-r [&>h2]:from-slate-700 [&>h2]:to-slate-800 [&>h2]:px-4 [&>h2]:py-3 [&>h2]:rounded-lg [&>h2]:border-l-4 [&>h2]:border-blue-400 [&>h2]:cursor-pointer [&>h2]:hover:from-slate-600 [&>h2]:hover:to-slate-700 [&>h2]:hover:border-blue-500 [&>h2]:transition-all [&>h2]:duration-200 [&>h2]:relative [&>h2]:pr-8 [&>h2]:shadow-md [&>h2]:hover:shadow-lg
        [&>h3]:text-lg [&>h3]:font-semibold [&>h3]:text-gray-800 [&>h3]:mt-5 [&>h3]:mb-3 [&>h3]:tracking-tight [&>h3]:bg-gradient-to-r [&>h3]:from-indigo-50 [&>h3]:to-purple-50 [&>h3]:px-4 [&>h3]:py-2.5 [&>h3]:rounded-lg [&>h3]:border [&>h3]:border-indigo-100 [&>h3]:border-l-4 [&>h3]:border-l-indigo-300 [&>h3]:cursor-pointer [&>h3]:hover:from-indigo-100 [&>h3]:hover:to-purple-100 [&>h3]:hover:border-indigo-200 [&>h3]:hover:border-l-indigo-400 [&>h3]:transition-all [&>h3]:duration-200 [&>h3]:relative [&>h3]:pr-8 [&>h3]:shadow-sm [&>h3]:hover:shadow-md
        [&>h4]:text-base [&>h4]:font-medium [&>h4]:text-gray-700 [&>h4]:mt-4 [&>h4]:mb-2 [&>h4]:pl-3 [&>h4]:border-l-3 [&>h4]:border-gray-300 [&>h4]:bg-gray-25 [&>h4]:py-1 [&>h4]:rounded-r-md
        [&>p]:mb-4 [&>p]:leading-8
        [&>ul]:mb-4 [&>ul]:space-y-2 [&>ul>li]:relative [&>ul>li]:pl-8 [&>ul>li]:before:content-['●'] [&>ul>li]:before:absolute [&>ul>li]:before:left-0 [&>ul>li]:before:text-blue-500 [&>ul>li]:before:font-bold [&>ul>li]:before:text-lg [&>ul>li]:before:top-0
        [&>ol]:mb-4 [&>ol]:space-y-2 [&>ol]:ml-8 [&>ol]:list-decimal [&>ol]:marker:text-blue-600 [&>ol]:marker:font-semibold [&>ol]:marker:text-lg [&>ol>li]:mb-1 [&>ol>li]:pl-2
        [&>blockquote]:border-l-2 [&>blockquote]:border-gray-200 [&>blockquote]:pl-4 [&>blockquote]:text-gray-600 [&>blockquote]:italic [&>blockquote]:my-6 [&>blockquote]:text-lg
        [&>pre]:bg-gray-50 [&>pre]:border [&>pre]:border-gray-100 [&>pre]:p-4 [&>pre]:rounded-xl [&>pre]:overflow-x-auto [&>pre]:my-6 [&>pre]:text-sm [&>pre]:leading-6
        [&>:not(pre)>code]:bg-gray-100 [&>:not(pre)>code]:px-2 [&>:not(pre)>code]:py-0.5 [&>:not(pre)>code]:rounded [&>:not(pre)>code]:text-sm [&>:not(pre)>code]:font-mono [&>:not(pre)>code]:text-gray-800
        [&>a]:text-gray-900 [&>a]:underline [&>a]:decoration-gray-300 [&>a]:underline-offset-4 [&>a]:transition-colors [&>a:hover]:decoration-gray-600
        [&>img]:rounded-xl [&>img]:my-6 [&>img]:border [&>img]:border-gray-100
        [&>hr]:border-0 [&>hr]:h-px [&>hr]:bg-gray-200 [&>hr]:my-8
        [&>table]:w-full [&>table]:border-collapse [&>table]:my-6 [&>table]:text-sm
        [&>table_th]:border-b [&>table_th]:border-gray-200 [&>table_th]:px-4 [&>table_th]:py-3 [&>table_th]:text-left [&>table_th]:font-medium [&>table_th]:text-gray-900
        [&>table_td]:border-b [&>table_td]:border-gray-100 [&>table_td]:px-4 [&>table_td]:py-3 [&>table_td]:text-gray-700
        first:[&>*]:mt-0
      " id="article-content">
        {Content && <Content />}
      </article>

      <script>
        document.addEventListener('DOMContentLoaded', function() {
          const article = document.getElementById('article-content');
          if (!article) return;

          // Check if button already exists to prevent duplicates
          if (document.querySelector('[data-collapse-button]')) return;

          // Create collapse button
          const collapseBtn = document.createElement('button');
          collapseBtn.innerHTML = '📖';
          collapseBtn.className = 'fixed top-20 right-4 z-50 w-12 h-12 bg-white/90 backdrop-blur-sm text-slate-700 rounded-full hover:bg-white hover:scale-110 transition-all duration-200 border border-slate-200 hover:border-slate-300 shadow-lg hover:shadow-xl flex items-center justify-center text-lg';
          collapseBtn.setAttribute('data-collapse-button', 'true');
          
          // Create tooltip
          const tooltip = document.createElement('div');
          tooltip.innerHTML = 'Toggle Sections';
          tooltip.className = 'fixed top-20 right-16 z-50 bg-slate-800 text-white px-3 py-1.5 rounded-lg text-sm font-medium shadow-lg opacity-0 pointer-events-none transition-all duration-200 whitespace-nowrap';
          tooltip.setAttribute('data-collapse-tooltip', 'true');
          
          // Add hover events for tooltip
          collapseBtn.addEventListener('mouseenter', () => {
            tooltip.style.opacity = '1';
            tooltip.style.transform = 'translateX(-4px)';
          });
          
          collapseBtn.addEventListener('mouseleave', () => {
            tooltip.style.opacity = '0';
            tooltip.style.transform = 'translateX(0)';
          });
          
          let sectionsCollapsed = false;
          
          function initializeCollapsible() {
            if (!article) return;
            
            const headers = article.querySelectorAll('h2, h3');
            
            headers.forEach(header => {
              // Add click indicator
              const indicator = document.createElement('span');
              indicator.innerHTML = '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>';
              indicator.className = 'absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 text-xs select-none transition-all duration-200';
              header.appendChild(indicator);
              
              // Find content until next header of same/higher level
              const contentElements: Element[] = [];
              let sibling = header.nextElementSibling;
              const headerLevel = parseInt(header.tagName.charAt(1));
              
              while (sibling) {
                const siblingLevel = sibling.tagName.match(/^H[1-6]$/) ? 
                  parseInt(sibling.tagName.charAt(1)) : null;
                
                if (siblingLevel && siblingLevel <= headerLevel) {
                  break;
                }
                
                contentElements.push(sibling);
                sibling = sibling.nextElementSibling;
              }
              
              if (contentElements.length > 0) {
                // Store original styles and add data attributes for tracking
                header.setAttribute('data-collapsible', 'true');
                
                contentElements.forEach((el, index) => {
                  el.setAttribute('data-section-content', header.tagName.toLowerCase() + '-' + Array.from(article.children).indexOf(header));
                  el.setAttribute('data-original-display', window.getComputedStyle(el).display);
                });
                
                // Add click handler
                header.addEventListener('click', () => {
                  const isCollapsed = header.getAttribute('data-collapsed') === 'true';
                  
                  if (isCollapsed) {
                    // Expand
                    contentElements.forEach(el => {
                      (el as HTMLElement).style.display = el.getAttribute('data-original-display') || 'block';
                      (el as HTMLElement).style.opacity = '1';
                      (el as HTMLElement).style.transform = 'translateY(0)';
                    });
                    header.setAttribute('data-collapsed', 'false');
                    indicator.innerHTML = '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>';
                  } else {
                    // Collapse
                    contentElements.forEach(el => {
                      (el as HTMLElement).style.display = 'none';
                      (el as HTMLElement).style.opacity = '0';
                      (el as HTMLElement).style.transform = 'translateY(-10px)';
                    });
                    header.setAttribute('data-collapsed', 'true');
                    indicator.innerHTML = '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>';
                  }
                });
              }
            });
          }
          
          collapseBtn.addEventListener('click', () => {
            if (!article) return;
            
            const collapsibleHeaders = article.querySelectorAll('[data-collapsible="true"]');
            
            if (sectionsCollapsed) {
              // Expand all
              collapsibleHeaders.forEach(header => {
                const indicator = header.querySelector('span');
                const sectionId = header.tagName.toLowerCase() + '-' + Array.from(article.children).indexOf(header);
                const contentElements = article.querySelectorAll('[data-section-content="' + sectionId + '"]');
                
                contentElements.forEach(el => {
                  (el as HTMLElement).style.display = el.getAttribute('data-original-display') || 'block';
                  (el as HTMLElement).style.opacity = '1';
                  (el as HTMLElement).style.transform = 'translateY(0)';
                });
                header.setAttribute('data-collapsed', 'false');
                if (indicator) indicator.innerHTML = '▼';
              });
              collapseBtn.innerHTML = '📖';
              tooltip.innerHTML = 'Collapse Sections';
            } else {
              // Collapse all
              collapsibleHeaders.forEach(header => {
                const indicator = header.querySelector('span');
                const sectionId = header.tagName.toLowerCase() + '-' + Array.from(article.children).indexOf(header);
                const contentElements = article.querySelectorAll('[data-section-content="' + sectionId + '"]');
                
                contentElements.forEach(el => {
                  (el as HTMLElement).style.display = 'none';
                  (el as HTMLElement).style.opacity = '0';
                  (el as HTMLElement).style.transform = 'translateY(-10px)';
                });
                header.setAttribute('data-collapsed', 'true');
                if (indicator) indicator.innerHTML = '▶';
              });
              collapseBtn.innerHTML = '📋';
              tooltip.innerHTML = 'Expand Sections';
            }
            
            sectionsCollapsed = !sectionsCollapsed;
          });
          
          // Clean up any existing buttons/tooltips before adding new ones
          const existingButton = document.querySelector('[data-collapse-button]');
          const existingTooltip = document.querySelector('[data-collapse-tooltip]');
          if (existingButton) existingButton.remove();
          if (existingTooltip) existingTooltip.remove();
          
          // Add floating button and tooltip to body
          document.body.appendChild(collapseBtn);
          document.body.appendChild(tooltip);
          
          // Initialize
          initializeCollapsible();
        });
      </script>

      {/* Navigation/Back Button */}
      <div class="mt-12 pt-8 border-t border-gray-200">
        <a 
          href="/blogs" 
          class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 font-medium transition-colors"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to all posts
        </a>
      </div>
    </div>
  ) : (
    <div class="text-center py-16">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">Article not found</h2>
      <p class="text-gray-600 mb-8">The blog post you are looking for does not exist.</p>
      <a 
        href="/blogs" 
        class="inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to all posts
      </a>
    </div>
  )}
</MainLayout>
