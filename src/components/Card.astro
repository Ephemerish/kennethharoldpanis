---
import { formatDate, calculateReadTime } from "../utils";
import type { CollectionEntry } from "astro:content";
import Tags from "./Tags.astro";
import { Image } from 'astro:assets';

const { item, type } = Astro.props;

interface Props {
  item: CollectionEntry<"blog"> | CollectionEntry<"projects">;
  type: "blog" | "project";
}

// Type guards and data extraction
const isBlog = type === "blog";
const isProject = type === "project";

// Common data
const title = item.data.title;
const image = item.data.image;
const tags = item.data.tags;
const slug = item.slug;

// Blog-specific data
const readTime = isBlog ? calculateReadTime(item.body) : null;
const pubDate = isBlog ? (item.data as CollectionEntry<"blog">["data"]).pubDate : null;
const author = isBlog ? (item.data as CollectionEntry<"blog">["data"]).author : null;

// Project-specific data
const description = isProject ? (item.data as CollectionEntry<"projects">["data"]).description : null;
const status = isProject ? (item.data as CollectionEntry<"projects">["data"]).status : null;
const category = isProject ? (item.data as CollectionEntry<"projects">["data"]).category : null;
const demoUrl = isProject ? (item.data as CollectionEntry<"projects">["data"]).demoUrl : null;
const videoUrl = isProject ? (item.data as CollectionEntry<"projects">["data"]).videoUrl : null;
const githubUrl = isProject ? (item.data as CollectionEntry<"projects">["data"]).githubUrl : null;

// Project status and category configurations
const statusColors = {
  completed: "bg-green-100 text-green-800",
  "in-progress": "bg-blue-100 text-blue-800", 
  planned: "bg-gray-100 text-gray-800"
};

const statusText = {
  completed: "Completed",
  "in-progress": "In Progress",
  planned: "Planned"
};

const categoryIcons = {
  web: "üåê",
  mobile: "üì±", 
  hardware: "üîß",
  "ai-ml": "ü§ñ",
  game: "üéÆ",
  desktop: "üíª"
};

const baseUrl = isBlog ? "/blogs/" : "/projects/";
---

<article class="group bg-white rounded-2xl overflow-hidden shadow-lg border border-gray-200 hover:shadow-xl hover:bg-blue-50 hover:border-blue-200 cursor-pointer transition-all duration-300 ease-in-out">
  <a href={baseUrl + slug} class="block">
    <!-- Image container -->
    <div class="relative aspect-[16/9] overflow-hidden">
      <Image
        src={"/images/" + image}
        alt={title}
        class="w-full h-full object-cover"
        width={400}
        height={225}
      />
      
      <!-- Blog: Reading time badge -->
      {isBlog && readTime && (
        <div class="absolute top-3 right-3 bg-white/90 backdrop-blur-sm px-2 py-1 rounded-full text-xs font-medium text-gray-700">
          {readTime}
        </div>
      )}
      
      <!-- Project: Status badge -->
      {isProject && status && (
        <div class={`absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-medium backdrop-blur-sm ${statusColors[status]}`}>
          {statusText[status]}
        </div>
      )}
    </div>
    
    <div class="p-6">
      <!-- Title -->
      <h2 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2 group-hover:text-blue-900 transition-colors duration-300">
        {isProject && category ? categoryIcons[category] + " " + title : title}
      </h2>
      
      <!-- Blog: Metadata -->
      {isBlog && (
        <div class="flex items-center gap-4 text-sm text-gray-500 mb-4">
          <time class="flex items-center gap-1.5">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {formatDate(pubDate!)}
          </time>
        </div>
      )}
      
      <!-- Blog: Author -->
      {isBlog && author && (
        <div class="flex items-center gap-2 text-sm text-gray-600 mb-5">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          <span>by {author}</span>
        </div>
      )}
      
      <!-- Project: Description -->
      {isProject && description && (
        <p class="text-gray-600 text-sm mb-4 line-clamp-3">
          {description}
        </p>
      )}
      
      <!-- Project: Links -->
      {isProject && (demoUrl || videoUrl || githubUrl) && (
        <div class="flex gap-2 mb-4 text-sm">
          {demoUrl && (
            <a 
              href={demoUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-blue-600 hover:text-blue-800 font-medium flex items-center"
              onclick="event.stopPropagation()"
            >
              <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
              Demo
            </a>
          )}
          {videoUrl && (
            <a 
              href={videoUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-red-600 hover:text-red-800 font-medium flex items-center"
              onclick="event.stopPropagation()"
            >
              <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293H15M9 10v4a2 2 0 002 2h2a2 2 0 002-2v-4M9 10V9a2 2 0 012-2h2a2 2 0 012 2v1" />
              </svg>
              Video
            </a>
          )}
          {githubUrl && (
            <a 
              href={githubUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-gray-600 hover:text-gray-800 font-medium flex items-center"
              onclick="event.stopPropagation()"
            >
              <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
              Code
            </a>
          )}
        </div>
      )}
      
      <!-- Tags -->
      <div class={isProject ? "" : "mb-4"}>
        <Tags tags={tags} />
      </div>
      
      <!-- CTA for blogs -->
      {isBlog && (
        <div class="flex items-center text-blue-600 text-sm font-medium pt-3 border-t border-gray-100 group-hover:text-blue-700 transition-colors duration-300">
          <span>Read blog</span>
          <svg class="w-4 h-4 ml-1.5 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </div>
      )}
      
      <!-- CTA for projects -->
      {isProject && (
        <div class="flex items-center text-blue-600 text-sm font-medium pt-3 border-t border-gray-100 group-hover:text-blue-700 transition-colors duration-300">
          <span>View project</span>
          <svg class="w-4 h-4 ml-1.5 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </div>
      )}
    </div>
  </a>
</article>
