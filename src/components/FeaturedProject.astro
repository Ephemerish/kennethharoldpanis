---
import type { CollectionEntry } from "astro:content";
import Tags from "./Tags.astro";
import { Image } from 'astro:assets';

const { project } = Astro.props;

interface Props {
  project: CollectionEntry<"projects">;
}

const statusColors = {
  completed: "bg-green-500 text-white",
  "in-progress": "bg-blue-500 text-white", 
  planned: "bg-gray-500 text-white"
};

const statusText = {
  completed: "Completed",
  "in-progress": "In Progress",
  planned: "Planned"
};

const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<div class="relative w-full group cursor-pointer rounded-3xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-[1.02]">
  <a href={"/projects/" + project.slug} class="block">
    <div class="relative">
      <Image
        src={"/images/" + project.data.image}
        alt={project.data.title}
        class="w-full h-[300px] sm:h-[400px] lg:h-[500px] object-cover"
        width={800}
        height={600}
        loading="eager"
      />
      
      <!-- Gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent"></div>
      
      <!-- Featured badge -->
      <div class="absolute top-4 left-4 sm:top-6 sm:left-6 bg-yellow-500 text-white px-3 py-1.5 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-semibold shadow-lg">
        ‚≠ê Featured
      </div>
      
      <!-- Status badge -->
      <div class="absolute top-4 right-4 sm:top-6 sm:right-6">
        <span class={`px-3 py-1.5 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-semibold shadow-lg ${statusColors[project.data.status]}`}>
          {statusText[project.data.status]}
        </span>
      </div>
      
      <!-- Content overlay -->
      <div class="absolute inset-0 flex flex-col justify-end p-4 sm:p-6 lg:p-8 text-white">
        <div class="max-w-4xl">
          <!-- Mobile: Simplified layout -->
          <div class="sm:hidden">
            <h1 class="text-xl font-bold mb-2 leading-tight">
              {project.data.title}
            </h1>
            <p class="text-sm text-gray-200 mb-3 line-clamp-2">
              {project.data.description}
            </p>
            <div class="flex items-center justify-between">
              {project.data.endDate && (
                <time class="text-xs text-gray-300">
                  {formatDate(project.data.endDate)}
                </time>
              )}
              <span class="text-sm font-medium">View Project ‚Üí</span>
            </div>
          </div>
          
          <!-- Desktop: Full layout -->
          <div class="hidden sm:block">
            <!-- Category indicator -->
            <div class="mb-4">
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-white/20 backdrop-blur-sm text-white">
                üöÄ Latest Project
              </span>
            </div>
            
            <!-- Title -->
            <h1 class="text-3xl lg:text-4xl font-bold mb-4 leading-tight group-hover:text-blue-200 transition-colors duration-300">
              {project.data.title}
            </h1>
            
            <!-- Meta info -->
            <div class="flex flex-wrap items-center gap-4 mb-6 text-gray-200">
              {project.data.endDate && (
                <time class="flex items-center gap-2 text-base">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  {formatDate(project.data.endDate)}
                </time>
              )}
              
              {project.data.institution && (
                <div class="flex items-center gap-2 text-base">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m5 0v-4a1 1 0 011-1h2a1 1 0 011 1v4m-5 0H3"></path>
                  </svg>
                  <span>{project.data.institution}</span>
                </div>
              )}
            </div>

            <!-- Description -->
            <p class="text-base lg:text-lg text-gray-100 mb-6 leading-relaxed max-w-3xl">
              {project.data.description}
            </p>
            
            <!-- Tags -->
            <div class="flex flex-wrap gap-2 mb-6">
              {project.data.tags.slice(0, 4).map((tag) => (
                <span class="px-3 py-1 bg-white/20 backdrop-blur-sm text-white rounded-full text-sm font-medium hover:bg-white/30 transition-colors duration-200">
                  {tag}
                </span>
              ))}
              {project.data.tags.length > 4 && (
                <span class="px-3 py-1 bg-white/20 backdrop-blur-sm text-white rounded-full text-sm font-medium">
                  +{project.data.tags.length - 4} more
                </span>
              )}
            </div>
            
            <!-- CTA -->
            <div class="flex items-center">
              <span class="text-base font-semibold mr-3">View Project Details</span>
              <svg class="w-5 h-5 group-hover:translate-x-2 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </a>
</div>
