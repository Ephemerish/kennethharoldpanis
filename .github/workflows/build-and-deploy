# This workflow will build a docker container, publish it to Google Container
# Registry, and deploy it to GKE when there is a push to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Google Kubernetes Engine (container.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Ensure that your repository contains the necessary configuration for your
#    Google Kubernetes Engine cluster, including deployment.yml,
#    kustomization.yml, service.yml, etc.
#
# 3. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Kubernetes Engine Developer (roles/container.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 5. Change the values in the "env" block to match your values.

name: "Build and Deploy to GKE"

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
  REPOSITORY: ${{ secrets.REPOSITORY }}
  IMAGE: ${{ secrets.IMAGE }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

jobs:
  setup-build-publish-deploy:
    name: "Setup, Build, Publish, and Deploy"
    runs-on: "ubuntu-latest"
    environment: "production"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"

      - name: "Docker Auth"
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.auth_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: "Set up GKE credentials"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          location: "${{ env.GKE_ZONE }}"

      - name: "Build and push Docker container"
        run: |-
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"

          docker build \
            --tag "${DOCKER_TAG}" \
            --build-arg GITHUB_SHA="${{ github.sha }}" \
            --build-arg GITHUB_REF="${{ github.ref }}" \
            .

          docker push "${DOCKER_TAG}"

      - name: "Set up Kustomize"
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.3/kustomize_v5.4.3_linux_amd64.tar.gz
          tar -xzf kustomize_v5.4.3_linux_amd64.tar.gz
          chmod u+x ./kustomize

      - name: "Deploy to GKE"
        run: |-
          ./kustomize edit set image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          ./kustomize build k8s | kubectl apply -f -
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
          kubectl get services -o wide
